PROJECT(Tank)
INCLUDE(CollectSrcs)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/Include)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR})
INCLUDE_DIRECTORIES($ENV{BOOST_INCLUDE})
#INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

SET(Tank_SUBDIRS )

GET_SRCS(Tank_SRCLISTS Tank_SUBDIRS)
LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/Src/Common)
LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/Src/Math)
LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/Src/Graphic)
LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/Src/Application)
LINK_DIRECTORIES($ENV{BOOST_LIB})

#MESSAGE(STATUS ${CMAKE_BINARY_DIR}/Src/Common)
#MESSAGE(STATUS ${CMAKE_BINARY_DIR}/Src/Math)
#MESSAGE(STATUS ${CMAKE_BINARY_DIR}/Src/Graphic)
#MESSAGE(STATUS ${CMAKE_BINARY_DIR}/Src/Application)

ADD_EXECUTABLE(Tank ${Tank_SRCLISTS})

TARGET_LINK_LIBRARIES(Tank boost_system)
TARGET_LINK_LIBRARIES(Tank boost_thread)
TARGET_LINK_LIBRARIES(Tank boost_date_time)
TARGET_LINK_LIBRARIES(Tank pthread)
TARGET_LINK_LIBRARIES(Tank Common)
TARGET_LINK_LIBRARIES(Tank Math)
TARGET_LINK_LIBRARIES(Tank Graphic)
TARGET_LINK_LIBRARIES(Tank Application)

#install configure
INSTALL(TARGETS Tank
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib)


